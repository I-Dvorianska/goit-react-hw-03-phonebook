{"version":3,"sources":["ContactForm/ContactForm.styled.jsx","ContactForm/ContactForm.jsx","ContactList/ContactList.styled.jsx","ContactList/ContactList.jsx","Filter/Filter.styled.jsx","Filter/Filter.jsx","App.styled.js","App.js","index.js"],"names":["Form","styled","form","Label","label","Input","input","Button","button","ContactForm","state","name","number","handleChange","e","setState","currentTarget","target","value","handleSubmit","preventDefault","onSubmit","props","this","action","htmlFor","onChange","type","pattern","title","required","Component","List","ul","ListItem","li","ContactList","contacts","deleteId","map","contact","id","onClick","Wrapper","div","Filter","getFilteredName","PrimaryTitle","h1","SecondaryTitle","h2","App","filter","handleFilter","text","visibleContacts","normalizedFilter","toLowerCase","includes","addContact","newContact","uuidv4","some","alert","deleteContact","storageContacts","localStorage","getItem","storageContactsParced","JSON","parse","prevState","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a30c777b.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Form = styled.form`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 40px;\n  padding: 30px;\n  border: 1px solid #ccc;\n  border-radius: 4px;\n`;\n\nexport const Label = styled.label`\n  font-size: 14px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-top: 4px;\n`;\n\nexport const Button = styled.button`\n  width: fit-content;\n  padding: 4px;\n  margin-top: 8px;\n\n  font-size: 14px;\n\n  background-color: #f7ce9d;\n  border: 1px solid #f8cd98;\n  border-radius: 4px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #ebba7f;\n    border-color: #ebba7f;\n  }\n`;\n","import { Component } from \"react\";\nimport { Form, Label, Input, Button } from \"./ContactForm.styled\";\n\nclass ContactForm extends Component {\n  state = {\n    name: \"\",\n    number: \"\",\n  };\n\n  handleChange = (e) => {\n    this.setState({ [e.currentTarget.name]: e.target.value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const { name, number } = this.state;\n    const { onSubmit } = this.props;\n\n    onSubmit(name, number);\n    this.setState({ name: \"\", number: \"\" });\n  };\n\n  render() {\n    const { handleSubmit, handleChange } = this;\n    const { name, number } = this.state;\n    return (\n      <Form action=\"\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">Name</Label>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n        <Label htmlFor=\"number\">Number</Label>\n        <Input\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n\n        <Button type=\"submit\">Add contact</Button>\n      </Form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styled from \"@emotion/styled\";\n\nexport const List = styled.ul`\n  list-style-type: circle;\n  margin-left: 20px;\n`;\n\nexport const ListItem = styled.li`\n  margin-top: 8px;\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  padding: 4px;\n  margin-left: 8px;\n\n  font-size: 14px;\n\n  background-color: #ebba7f;\n  border: 1px solid #ebba7f;\n  border-radius: 4px;\n\n  &:hover {\n    cursor: pointer;\n    background-color: #f7ce9d;\n    border-color: #f8cd98;\n  }\n`;\n","import { List, ListItem, Button } from \"./ContactList.styled\";\n\nconst ContactList = ({ contacts, deleteId }) => {\n  return (\n    <div>\n      <List>\n        {contacts.map((contact) => {\n          const { id, name, number } = contact;\n          return (\n            <ListItem key={id}>\n              {name} - {number}{\" \"}\n              <Button type=\"button\" onClick={() => deleteId(id)}>\n                Delete\n              </Button>\n            </ListItem>\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nexport default ContactList;\n","import styled from \"@emotion/styled\";\n\nexport const Wrapper = styled.div`\n  display: inline-flex;\n  flex-direction: column;\n  margin-left: 60px;\n`;\n\nexport const Input = styled.input`\n  padding: 4px;\n  margin-top: 4px;\n`;\n\nexport const Label = styled.label`\n  font-weight: 500;\n`;\n","import { Component } from \"react\";\nimport { Wrapper, Input, Label } from \"./Filter.styled\";\n\nclass Filter extends Component {\n  getFilteredName = (e) => {\n    const { onChange } = this.props;\n\n    return onChange(e.currentTarget.value);\n  };\n\n  render() {\n    const { value } = this.props;\n    return (\n      <Wrapper>\n        <Label htmlFor=\"filter\">Find contacts by name</Label>\n        <Input\n          type=\"text\"\n          name=\"filter\"\n          value={value}\n          onChange={this.getFilteredName}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default Filter;\n","import styled from \"@emotion/styled\";\n\nexport const PrimaryTitle = styled.h1`\n  margin-left: 75px;\n`;\n\nexport const SecondaryTitle = styled.h2`\n  margin-left: 75px;\n`;\n","import { Component } from \"react\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport Filter from \"./Filter/Filter\";\nimport { PrimaryTitle, SecondaryTitle } from \"./App.styled\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      // { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      // { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      // { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      // { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  componentDidMount() {\n   \n    const storageContacts = localStorage.getItem('contacts');\n    const storageContactsParced = JSON.parse(storageContacts);\n    if (storageContactsParced) {\n      this.setState({ contacts: storageContactsParced });\n    }\n    \n  }\n\n  componentDidUpdate(prevState) {\n   \n    if (prevState.contacts !== this.state.contacts) {\n      localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts ));\n    }\n  }\n\n  handleFilter = (text) => {\n    this.setState({ filter: text });\n  };\n\n  visibleContacts = () => {\n    const { filter, contacts } = this.state;\n\n    const normalizedFilter = filter.toLowerCase();\n    \n      return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n    \n    \n     \n  };\n\n  addContact = (name, number) => {\n    const { contacts } = this.state;\n    const newContact = {\n      id: uuidv4(),\n      name,\n      number,\n    };\n\n    contacts.some((contact) => contact.name === newContact.name)\n      ? alert(`${newContact.name} is already in contacts`)\n      : this.setState({\n          contacts: [newContact, ...contacts],\n        });\n  };\n\n  deleteContact = (id) => {\n    const { contacts } = this.state;\n    this.setState({\n      contacts: contacts.filter((contact) => contact.id !== id),\n    });\n  };\n\n  render() {\n    const { addContact, handleFilter, visibleContacts, state, deleteContact } =\n      this;\n    return (\n      <>\n        <PrimaryTitle>Phonebook</PrimaryTitle>\n        <ContactForm onSubmit={addContact} />\n\n        <SecondaryTitle>Contacts</SecondaryTitle>\n        \n        <Filter onChange={handleFilter} value={state.filter} />\n        <ContactList contacts={visibleContacts()} deleteId={deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}